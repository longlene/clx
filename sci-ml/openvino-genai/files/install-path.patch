diff -Nur a/CMakeLists.txt b/CMakeLists.txt
--- a/CMakeLists.txt	2025-08-26 00:27:57.000000000 -0700
+++ b/CMakeLists.txt	2025-09-05 14:20:02.044780513 -0700
@@ -62,6 +62,7 @@
                  PATHS "${OpenVINO_DIR_PY}")
 endif()
 
+include(GNUInstallDirs)
 include(cmake/features.cmake)
 include(cmake/version.cmake)
 include(cmake/vs_version.cmake)
@@ -102,8 +103,8 @@
     add_subdirectory(tests/cpp)
 endif()
 
-install(FILES LICENSE DESTINATION docs/licensing COMPONENT licensing_genai RENAME LICENSE-GENAI)
-install(FILES third-party-programs.txt DESTINATION docs/licensing COMPONENT licensing_genai RENAME third-party-programs-genai.txt)
+install(FILES LICENSE DESTINATION ${CMAKE_INSTALL_DOCDIR} COMPONENT licensing_genai RENAME LICENSE-GENAI)
+install(FILES third-party-programs.txt DESTINATION ${CMAKE_INSTALL_DOCDIR} COMPONENT licensing_genai RENAME third-party-programs-genai.txt)
 if(NOT DEFINED CPACK_ARCHIVE_COMPONENT_INSTALL)
     set(CPACK_ARCHIVE_COMPONENT_INSTALL ON)
 endif()
diff -Nur a/src/CMakeLists.txt b/src/CMakeLists.txt
--- a/src/CMakeLists.txt	2025-08-26 00:27:57.000000000 -0700
+++ b/src/CMakeLists.txt	2025-09-05 14:22:08.174785152 -0700
@@ -56,9 +56,9 @@
         list(APPEND rpaths "@loader_path/../node_modules/openvino-node/bin")
     endif()
 else()
-    set(LIBRARY_DESTINATION runtime/lib/${ARCH_DIR})
-    set(ARCHIVE_DESTINATION runtime/lib/${ARCH_DIR})
-    set(RUNTIME_DESTINATION runtime/bin/${ARCH_DIR})
+    set(LIBRARY_DESTINATION ${CMAKE_INSTALL_LIBDIR})
+    set(ARCHIVE_DESTINATION ${CMAKE_INSTALL_LIBDIR})
+    set(RUNTIME_DESTINATION ${CMAKE_INSTALL_LIBDIR})
 endif()
 
 if(NOT DEFINED ENABLE_LTO)
diff -Nur a/src/cpp/CMakeLists.txt b/src/cpp/CMakeLists.txt
--- a/src/cpp/CMakeLists.txt	2025-08-26 00:27:57.000000000 -0700
+++ b/src/cpp/CMakeLists.txt	2025-09-05 14:30:11.031469624 -0700
@@ -233,7 +233,7 @@
             NAMELINK_COMPONENT core_genai_dev
         ARCHIVE DESTINATION ${ARCHIVE_DESTINATION} COMPONENT core_genai_dev
         RUNTIME DESTINATION ${RUNTIME_DESTINATION} COMPONENT core_genai
-        INCLUDES DESTINATION runtime/include)
+        INCLUDES DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})
 
 # development files do not need to be built for NPM package
 if(CPACK_GENERATOR STREQUAL "NPM")
@@ -242,12 +242,12 @@
 
 install(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/include/
                   ${OpenVINOGenAI_SOURCE_DIR}/src/c/include/
-        DESTINATION runtime/include COMPONENT core_genai_dev)
+                  DESTINATION ${CMAKE_INSTALL_INCLUDEDIR} COMPONENT core_genai_dev)
 install(FILES ${CMAKE_CURRENT_BINARY_DIR}/openvino/genai/version.hpp
-        DESTINATION runtime/include/openvino/genai COMPONENT core_genai_dev)
+        DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/openvino/genai COMPONENT core_genai_dev)
 
 install(EXPORT OpenVINOGenAITargets FILE OpenVINOGenAITargets.cmake
-        NAMESPACE openvino:: DESTINATION runtime/cmake
+        NAMESPACE openvino:: DESTINATION ${CMAKE_INSTALL_DATADIR}/cmake/${PROJECT_NAME}
         COMPONENT core_genai_dev)
 
 include(CMakePackageConfigHelpers)
@@ -256,5 +256,5 @@
 write_basic_package_version_file("${CMAKE_BINARY_DIR}/OpenVINOGenAIConfigVersion.cmake"
                                  VERSION ${OpenVINOGenAI_VERSION} COMPATIBILITY AnyNewerVersion)
 install(FILES "${CMAKE_BINARY_DIR}/OpenVINOGenAIConfig.cmake" "${CMAKE_BINARY_DIR}/OpenVINOGenAIConfigVersion.cmake"
-        DESTINATION runtime/cmake COMPONENT core_genai_dev)
+        DESTINATION ${CMAKE_INSTALL_DATADIR}/cmake/${PROJECT_NAME} COMPONENT core_genai_dev)
 export(EXPORT OpenVINOGenAITargets FILE "${CMAKE_BINARY_DIR}/OpenVINOGenAITargets.cmake" NAMESPACE openvino::)
diff -Nur a/src/python/CMakeLists.txt b/src/python/CMakeLists.txt
--- a/src/python/CMakeLists.txt	2025-08-26 00:27:57.000000000 -0700
+++ b/src/python/CMakeLists.txt	2025-09-05 14:37:35.088152652 -0700
@@ -63,24 +63,24 @@
 install(FILES "${CMAKE_CURRENT_SOURCE_DIR}/openvino_genai/__init__.py"
               "${CMAKE_CURRENT_SOURCE_DIR}/openvino_genai/__init__.pyi"
               "${CMAKE_CURRENT_SOURCE_DIR}/openvino_genai/py_openvino_genai.pyi"
-        DESTINATION python/openvino_genai
+              DESTINATION ${Python3_SITELIB}/openvino_genai
         COMPONENT pygenai_${Python3_VERSION_MAJOR}_${Python3_VERSION_MINOR})
 install(TARGETS ${TARGET_NAME}
-        LIBRARY DESTINATION python/openvino_genai
+        LIBRARY DESTINATION ${Python3_SITELIB}/openvino_genai
         COMPONENT pygenai_${Python3_VERSION_MAJOR}_${Python3_VERSION_MINOR})
 
 install(FILES "${OpenVINOGenAI_SOURCE_DIR}/LICENSE"
               "${OpenVINOGenAI_SOURCE_DIR}/third-party-programs.txt"
               "${OpenVINOGenAI_SOURCE_DIR}/SECURITY.md"
-        DESTINATION "${PY_BUILD_CMAKE_PACKAGE_NAME}-${PY_BUILD_CMAKE_PACKAGE_VERSION}.dist-info"
+              DESTINATION "${Python3_SITE_LIB}/${PY_BUILD_CMAKE_PACKAGE_NAME}-${PY_BUILD_CMAKE_PACKAGE_VERSION}.dist-info"
         COMPONENT wheel_genai
         EXCLUDE_FROM_ALL)
 
 # wheel_genai component is used for wheel generation in pyproject.toml.
 # Exclude wheel_genai from normal packaging because there's pygenai_X_Y component for that.
 install(TARGETS openvino_genai ${TARGET_NAME}
-        LIBRARY DESTINATION openvino_genai COMPONENT wheel_genai EXCLUDE_FROM_ALL
-        RUNTIME DESTINATION openvino_genai COMPONENT wheel_genai EXCLUDE_FROM_ALL)
+        LIBRARY DESTINATION ${Python3_SITELIB}/openvino_genai COMPONENT wheel_genai EXCLUDE_FROM_ALL
+        RUNTIME DESTINATION ${Python3_SITEARCH}/openvino_genai COMPONENT wheel_genai EXCLUDE_FROM_ALL)
 
 # Generate or check .pyi stub files generated by pybind11-stub
 
