diff -Nur a/src/error_info.cpp b/src/error_info.cpp
--- a/src/error_info.cpp	2024-11-22 01:12:24.000000000 -0800
+++ b/src/error_info.cpp	2025-03-20 10:55:55.839423321 -0700
@@ -90,8 +90,7 @@
 };
 } // namespace
 
-namespace fmt
-{
+FMT_BEGIN_NAMESPACE
 template<typename CharT>
 struct formatter<jinja2::Value, CharT>
 {
@@ -102,13 +101,14 @@
     }
 
     template<typename FormatContext>
-    auto format(const jinja2::Value& val, FormatContext& ctx)
+    auto format(const jinja2::Value& val, FormatContext& ctx) const
     {
         nonstd::visit(ValueRenderer<FormatContext>(&ctx), val.data());
         return fmt::format_to(ctx.out(), UNIVERSAL_STR("").GetValue<CharT>());
     }
 };
-} // namespace fmt
+FMT_END_NAMESPACE
+// namespace fmt
 
 namespace jinja2
 {
@@ -257,7 +257,7 @@
         break;
     }
     format_to(std::back_inserter(out), UNIVERSAL_STR("\n{}").GetValue<CharT>(), errInfo.GetLocationDescr());
-    result = to_string(out);
+    result = string_t(out.data(), out.size());
 }
 
 template<>
diff -Nur a/src/serialize_filters.cpp b/src/serialize_filters.cpp
--- a/src/serialize_filters.cpp	2024-11-22 01:12:24.000000000 -0800
+++ b/src/serialize_filters.cpp	2025-03-20 10:30:06.959368115 -0700
@@ -233,7 +233,7 @@
         {
             m_store.push_back(fmt::arg(m_name.c_str(), t));
         }
-        return fmt::detail::make_arg<FormatContext>(t);
+        return fmt::basic_format_arg<FormatContext>(t);
     }
 
     const RenderContext* m_context;
